generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mongodb"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid()) @map("_id")
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid()) @map("_id")
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id             String    @id @default(cuid()) @map("_id")
    name           String?
    email          String?   @unique
    image          String?
    emailVerified  DateTime?
    freeTier       Boolean   @default(true)
    hashedPassword String?
    accounts       Account[]
    sessions       Session[]
    Link           Link[]
}

model VerificationToken {
    id         String   @id @default(cuid()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Link {
    id           String   @id @default(cuid()) @map("_id")
    originalLink String
    shortLink    String
    createdAt    DateTime @default(now())
    userId       String
    private      Boolean  @default(true)
    User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}
